// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

edition = "2023";

package com.google.android.as.oss.delegatedui.api.infra.uiservice;

import "src/com/google/android/as/oss/delegatedui/api/common/common.proto";

option java_package = "com.google.android.as.oss.delegatedui.api.infra.uiservice";
option java_multiple_files = true;

// Prepares for a delegated UI session for these inputs.
// Next ID: 6
message DelegatedUiPrepareRequest {
  // Configuration from the local Context. Used to construct a remote Context.
  // This will be sent through RPC metadata headers, and is only documented here
  // for the record.
  // android.content.res.Configuration configuration = 0;

  common.DelegatedUiClientId client_id = 1;
  common.DelegatedUiIngressData ingress_data = 2;
  common.DelegatedUiDataProviderInfo data_provider_info = 5;

  // The android.view.View.MeasureSpec of the delegated UI that the client's
  // local UI can support.
  int32 measure_spec_width = 3;
  int32 measure_spec_height = 4;
}

message DelegatedUiPrepareResponse {
  // True if remote content is available for the given delegated UI request.
  bool is_content_available = 1;

  // If remote content is available, remote UI reports the size it will render
  // at. Respects the MeasureSpec given in the request.
  int32 desired_width = 2;
  int32 desired_height = 3;

  // Unique session uuid that will be constant over the course of this session.
  string session_uuid = 1;
}
