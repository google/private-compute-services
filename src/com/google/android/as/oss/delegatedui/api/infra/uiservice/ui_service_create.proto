// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

edition = "2023";

package com.google.android.as.oss.delegatedui.api.infra.uiservice;

import "src/com/google/android/as/oss/delegatedui/api/common/common.proto";

option java_package = "com.google.android.as.oss.delegatedui.api.infra.uiservice";
option java_multiple_files = true;

// Create - initialization call to set up remote rendering via delegated UI
message DelegatedUiCreateRequest {
  // Host token from the local SurfaceView. Used to construct a remote
  // SurfaceControlViewHost. This will be sent through RPC metadata headers, and
  // is only documented here for the record.
  // android.window.InputTransferToken input_transfer_token = 0;

  // Configuration from the local Context. Used to construct a remote Context.
  // This will be sent through RPC metadata headers, and is only documented here
  // for the record.
  // android.content.resConfiguration configuration = 0;

  // The display id of the display to render the delegated UI on.
  int32 display_id = 1;

  common.DelegatedUiClientId client_id = 2;

  common.DelegatedUiClientInputs client_inputs = 3;

  // Unique session uuid that was created by the prepare call.
  // If prepare was not called beforehand, this field can be left empty and
  // a new uuid will be generated by the server
  string session_uuid = 1;
}

message DelegatedUiCreateResponse {
  // Surface package of the remote SurfaceControlViewHost. The caller needs to
  // pass this into SurfaceView#setChildSurfacePackage to render the delegated
  // UI. This will be sent through RPC metadata headers, and is only documented
  // here for the record.
  // android.view.SurfaceControlViewHost.SurfacePackage surface_package = 0;

  // Unique session uuid that will be constant over the course of this session.
  // This is the same uuid that was passed in the request, or a new uuid if
  // none was passed in.
  string session_uuid = 1;
}
